import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as c,c as p,d as a,a as n,b as e,w as r,e as d}from"./app-fcUJjNM4.js";const u={},m=n("h1",{id:"built-in-components",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#built-in-components"},[n("span",null,"Built-in Components")])],-1),h=d(`<h2 id="clientonly" tabindex="-1"><a class="header-anchor" href="#clientonly"><span>ClientOnly</span></a></h2><ul><li>Usage:</li></ul><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ClientOnly</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NonSsrFriendlyComponent</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ClientOnly</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Details:</p><p>This component and its children will only be rendered in client-side. That means, it will not be rendered to HTML during build (SSR).</p><p>If a component is trying to access Browser / DOM APIs directly in <code>setup()</code>, an error will occur during build because those APIs are unavailable in Node.js environment. In such case, you could do either:</p><ul><li>Modify the component to only access Browser / DOM APIs in <code>onBeforeMount()</code> or <code>onMounted()</code> hook.</li><li>Wrap the component with <code>&lt;ClientOnly&gt;</code>.</li></ul></li></ul><h2 id="content" tabindex="-1"><a class="header-anchor" href="#content"><span>Content</span></a></h2><ul><li><p>Props:</p><ul><li>pageKey <ul><li>Type: <code>string</code></li><li>Required: <code>false</code></li></ul></li></ul></li><li><p>Usage:</p></li></ul><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">page-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v-xxxxxx<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),g=n("p",null,"Details:",-1),k=n("p",null,"This component will render the Markdown content of a page.",-1),_={href:"https://router.vuejs.org/api/#name-2",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"pageKey",-1),f=n("p",null,"This component is mainly for developing themes. You won't need it in most cases.",-1),b=n("p",null,"Also see:",-1);function y(x,w){const s=t("NpmBadge"),o=t("ExternalLinkIcon"),l=t("RouterLink");return c(),p("div",null,[m,a(s,{package:"@vuepress/client"}),h,n("ul",null,[n("li",null,[g,k,n("p",null,[e("The page key is the "),n("a",_,[e("name"),a(o)]),e(" of the page route. If the "),v,e(" prop is not provided, it will render the page of current route.")]),f]),n("li",null,[b,n("ul",null,[n("li",null,[a(l,{to:"/reference/node-api.html#key"},{default:r(()=>[e("Node API > Page Properties > key")]),_:1})])])])])])}const I=i(u,[["render",y],["__file","components.html.vue"]]);export{I as default};
